### What is this?
A library to sync NSUserDefaults to iCloud via CloudKit.  Based on MKiCloudSync,
by Mugunth Kumar, a clean and simple class to sync NSUserDefaults to iCloud.
Use of CloudKit removes the "clean and simple" but allows use in apps
distributed outside of the App Store.

### How to use?
1. Drag the two classes and #import the header file in your Application Delegate
2. Call `[MJCloudKitUserDefaultsSync startWithPrefix:@"sync" withContainerIdentifier@"iCloud.com.yourCompany.yourProduct"];`
3. Add a NotificationCenter receiver as follows

macOS:

> \- (void)application:(NSApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo
>
> {
>
> 	[MKiCloudSync checkCloudKitUpdates];
>
> }

iOS:
TBD

### To Do
* GCD would be preferable to the boolean flags currently used to serialize activity, but CloudKit makes heavy use of asynchronous completion handlers so a solution needs to be worked out to keep blocking our GCD serial queue until the CloudKit completions have been completed.
* updateFromiCloud should build a list of keys that have been added or had their value change and provide that to sendChangeNotifications to provide to interested parties.  Perhaps even include the old and new values.

###Notes
This is currently a beta release.  This initial commit has been demonstrated to
work but warrants further evaluation and testing.  It includes copious logging
statements, a bit of debug code, a bit of commented-out stuff that can be
removed, and a bit of commented-out stuff that should maybe be restored.  It has
not yet been verified to be of consistent style.

See [Flycut](http://github.com/MarkJerde/Flycut) for an example of
MJCloudKitUserDefaultsSync in use.

MJCloudKitUserDefaultsSync is based on Mugunth Kumar's MKiCloudSync, though it
is massively different as a result of using CloudKit and having a few additional
features.  It does, however, retain about half of Mugunth Kumar's code, owing to
the simplicity of his original solution.  Given their differences, in use of
CloudKit vs iCloud key-value store, the two are named and maintained
independently to avoid confusion.  If you are looking for a simple solution for
apps distributed through the App Store, MJCloudKitUserDefaultsSync will work but
consider MKiCloudSync.

Read the [blog post](http://blog.mugunthkumar.com/coding/ios-code-mkicloudsync-sync-your-nsuserdefaults-to-icloud-with-a-single-line-of-code) for more on Mugunth Kumar's original solution.
###License
Copyright (C) 2017 by Mark Jerde

Portions Copyright (C) 2011-2020 by Steinlogic

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

As a side note, you might also consider

1) tweeting about this mentioning @mark_a_jerde

2) A paypal donation to mark.a.jerde@gmail.com

3) tweeting about this mentioning @mugunthkumar for his original contributions

4) A paypal donation to mugunth.kumar@gmail.com

